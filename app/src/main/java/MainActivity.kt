package __PACKAGE_NAME__

import android.os.Bundle
import androidx.activity.compose.setContent
import androidx.compose.foundation.isSystemInDarkTheme
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.runtime.Composable
import androidx.compose.runtime.LaunchedEffect
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import com.highcapable.betterandroid.ui.component.activity.AppComponentActivity
import com.highcapable.betterandroid.ui.component.systembar.style.SystemBarStyle
import com.highcapable.betterandroid.ui.component.systembar.type.SystemBars
import com.highcapable.flexiui.component.AreaColumn
import com.highcapable.flexiui.component.Button
import com.highcapable.flexiui.component.PrimaryAppBar
import com.highcapable.flexiui.component.Scaffold
import com.highcapable.flexiui.component.Text
import __PACKAGE_NAME__.theme.MyApplicationTheme

class MainActivity : AppComponentActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            val currentDarkMode = isSystemInDarkTheme()
            systemBars.setStyle(
                if (currentDarkMode)
                    SystemBarStyle.DarkTransparent
                else SystemBarStyle.LightTransparent
            )
            // Generated by https://github.com/BetterAndroid/android-compose-app-template
            // You can visit https://github.com/BetterAndroid/FlexiUI to learn how to use Flexi UI.
            MyApplicationTheme(darkTheme = currentDarkMode) {
                MainScreen()
            }
        }
    }

    @Composable
    fun MainScreen() {
        Scaffold(
            appBar = {
                PrimaryAppBar(
                    title = { Text("__APP_NAME__") }
                )
            }
        ) { innerPadding ->
            var hideOrShowBars by remember { mutableStateOf(false) }
            var greeting by remember { mutableStateOf("Hello World!") }
            AreaColumn(
                modifier = Modifier.fillMaxWidth().padding(innerPadding),
                horizontalAlignment = Alignment.CenterHorizontally
            ) {
                Text(text = greeting)
                NecessarySpacer()
                Button(
                    onClick = { greeting = "Hello Android!" }
                ) { Text("Greeting") }
                NecessarySpacer()
                Button(
                    onClick = { hideOrShowBars = !hideOrShowBars }
                ) { Text("Trigger SystemBars") }
            }
            LaunchedEffect(hideOrShowBars) {
                if (hideOrShowBars)
                    systemBars.hide(SystemBars.ALL)
                else systemBars.show(SystemBars.ALL)
            }
        }
    }

    @Composable
    private fun NecessarySpacer() {
        Spacer(Modifier.height(20.dp))
    }
}